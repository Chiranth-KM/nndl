import tensorflow as tf
from tensorflow.keras import layers, models
from tensorflow.keras.datasets import cifar10
from tensorflow.keras.utils import to_categorical
import matplotlib.pyplot as plt

(x_train, y_train),(x_test, y_test)=cifar10.load_data()
x_train,x_test=x_train/255.0,x_test/255.0
y_train=to_categorical(y_train,10)
y_test=to_categorical(y_test,10)

def build_model(input_shape=(32,32,3), num_class=10):
    model=models.Sequential([
        layers.Conv2D(16,(3,3),activation='relu',input_shape=input_shape),
        layers.MaxPooling2D((2,2)),
        layers.Conv2D(32,(3,3),activation='relu'),
        layers.MaxPooling2D((2,2)),
        layers.Flatten(),
        layers.Dense(64,activation='relu'),
        layers.Dense(num_class, activation='softmax')
    ])

    model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
    return model

model=build_model(input_shape=(32,32,3),num_class=10)

history=model.fit(x_train,y_train,epochs=10, validation_data=(x_test,y_test),batch_size=64)

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.xlabel('epoch')
plt.ylabel('accuracy')
plt.show()

test_loss,test_acc=model.evaluate(x_test,y_test)
print(f'Test Accuracy: {test_acc}')
